package homework.thirteen;//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Circle.java
//  @ Date : 2020/5/9
//  @ Author : 
//
//

import org.w3c.dom.ls.LSOutput;

public class Test{
	public static void main(String[] args) {
		GeometricObject c1 = new Circle(2,"红色",true);
		GeometricObject c2 = new Circle(3,"黑色",false);
		System.out.println(GeometricObject.max(c1,c2));

		GeometricObject r1=new Rectangle(1,2);
		GeometricObject r2=new Rectangle(2,3);
		r1.setColor("黄色");
		r2.setColor("蓝色");
		System.out.println(GeometricObject.max(r1,r2));

	}
}

class Circle extends GeometricObject{
	private double radius;

	public Circle() {
	}

	public Circle(double radius) {
		this.radius = radius;
	}

	public Circle(double radius, String color, boolean filled) {
		this.radius = radius;
		this.setColor(color);
		this.setFilled(filled);
	}

	public double getRadius() {
		return radius;
	}

	public void setRadius(double radius) {
		this.radius = radius;
	}

	public double getDiameter(){
		return 2*radius;
	}

	@Override
	public double getArea() {
		return 0;
	}

	@Override
	public double getPerimeter() {
		return 0;
	}

	@Override
	public void howToColor() {

	}
}

class Rectangle extends GeometricObject {
	private double width;
	private double height;

	public Rectangle(){}

	public Rectangle(double width, double height) {
		this.width = width;
		this.height = height;
	}

	public Rectangle(String color, boolean filled, double width, double height) {
		super(color, filled);
		this.width = width;
		this.height = height;
	}

	public double getWidth() {
		return width;
	}

	public void setWidth(double width) {
		this.width = width;
	}

	public double getHeight() {
		return height;
	}

	public void setHeight(double height) {
		this.height = height;
	}

	@Override
	public double getArea() {
		return width*height;
	}

	@Override
	public double getPerimeter() {
		return (width+height)*2;
	}

	@Override
	public void howToColor() {

	}
}